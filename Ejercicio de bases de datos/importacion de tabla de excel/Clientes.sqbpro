<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Daniels/OneDrive/Escritorio/Ejercicios/Ejercicio de bases de datos/importacion de tabla de excel/Clientes.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1360"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Pedidos" custom_title="0" dock_id="1" table="4,7:mainPedidos"/><dock_state state="000000ff00000000fd00000001000000020000033b00000230fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000033b0000011e00ffffff0000033b0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Clientes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="8" mode="0"/></sort><column_widths><column index="1" value="300"/><column index="2" value="127"/><column index="3" value="95"/><column index="4" value="207"/><column index="5" value="300"/><column index="6" value="103"/><column index="7" value="39"/><column index="8" value="300"/><column index="9" value="300"/><column index="10" value="46"/><column index="11" value="46"/><column index="12" value="231"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Pedidos" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="0"/></sort><column_widths><column index="1" value="70"/><column index="2" value="60"/><column index="3" value="43"/><column index="4" value="48"/><column index="5" value="69"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">/*SELECT &quot;CLIENTE&quot;, &quot;CIUDAD&quot; 
FROM &quot;Clientes&quot;;*/

/*SELECT &quot;CLIENTE&quot;, &quot;EDAD&quot;
FROM &quot;Clientes&quot;
WHERE &quot;EDAD&quot; &gt;= 30;*/

/*SELECT &quot;CLIENTE&quot;, &quot;CIUDAD&quot;
FROM &quot;Clientes&quot;
WHERE &quot;CIUDAD&quot; = 'CÚCUTA';*/

--Selección de dos columnas y ordenación por una columna
/*SELECT &quot;CLIENTE&quot;, &quot;EDAD&quot;
FROM &quot;Clientes&quot;
ORDER BY &quot;EDAD&quot; ;*/
 --Selección de Dos Columnas y Ordenación Descendente por una Columna
/*SELECT &quot;CLIENTE&quot;, &quot;EDAD&quot;
FROM &quot;Clientes&quot;
ORDER BY &quot;EDAD&quot; DESC;*/

--Seleccionando Dos Columnas de una Tabla y Ordenando Descendentemente por Dos Columnas
/*SELECT &quot;CLIENTE&quot;, &quot;CIUDAD&quot;
FROM &quot;Clientes&quot;
ORDER BY &quot;CIUDAD&quot; DESC, &quot;CLIENTE&quot; DESC;*/

--Selección de dos columnas con una condición lógica compleja en WHERE
/*SELECT &quot;CLIENTE&quot;, &quot;EDAD&quot;
FROM &quot;Clientes&quot;
WHERE &quot;EDAD&quot; &gt; 50 OR &quot;EDAD&quot; &lt; 20;*/

--Cálculos sencillos sobre columnas
/*SELECT 
  &quot;CLIENTE&quot;, 
  &quot;EDAD&quot; + 10 AS &quot;EDAD_EN_10_AÑOS&quot;
FROM &quot;Clientes&quot;;*/

--Utilización de SUM() y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  SUM(&quot;EDAD&quot;) AS &quot;TOTAL_EDAD&quot;
FROM &quot;Clientes&quot;
GROUP BY &quot;CIUDAD&quot;;*/


--Usando COUNT() y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  COUNT(*) AS &quot;CLIENTES_POR_CIUDAD&quot;
FROM &quot;Clientes&quot;
GROUP BY &quot;CIUDAD&quot;;*/

--Uso de AVG() y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  AVG(&quot;EDAD&quot;) AS &quot;EDAD_PROMEDIO&quot;
FROM &quot;Clientes&quot;
GROUP BY &quot;CIUDAD&quot;;*/

--Usando MIN() y GROUP BY
/*SELECT  &quot;CIUDAD&quot;, 
MIN(&quot;EDAD&quot;) AS &quot;EDAD_MINIMA&quot;
FROM &quot;Clientes&quot;
GROUP BY &quot;CIUDAD&quot;;*/

--Uso de MAX() y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  MAX(&quot;EDAD&quot;) AS &quot;EDAD_MAXIMA&quot;
FROM &quot;Clientes&quot;
GROUP BY &quot;CIUDAD&quot;;*/
--Utilizar SUM(), WHERE y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  SUM(&quot;EDAD&quot;) AS &quot;TOTAL_EDAD&quot;
FROM &quot;Clientes&quot;
WHERE &quot;EDAD&quot; &gt; 30
GROUP BY &quot;CIUDAD&quot;;*/

--Uso de COUNT(), WHERE y GROUP BY
/*SELECT 
  &quot;CIUDAD&quot;, 
  COUNT(*) AS &quot;NUMERO_DE_CLIENTES&quot;
FROM &quot;Clientes&quot;
WHERE &quot;EDAD&quot; &gt; 30
GROUP BY &quot;CIUDAD&quot;;*/

/*CREATE TABLE &quot;Pedidos&quot; (
    &quot;ID_PEDIDO&quot; INTEGER PRIMARY KEY AUTOINCREMENT,  -- Clave primaria para la tabla Pedidos
    &quot;C.C Ó NIT&quot; TEXT,                               -- Columna que hace referencia al C.C Ó NIT del cliente
    &quot;FECHA&quot; TEXT,                                   -- Fecha del pedido
    &quot;MONTO&quot; REAL,                                   -- Monto del pedido
    &quot;PRODUCTO&quot; TEXT,                                -- Producto o descripción del pedido
    FOREIGN KEY(&quot;C.C Ó NIT&quot;) REFERENCES &quot;Clientes&quot;(&quot;C.C Ó NIT&quot;)  -- Relación con la tabla Clientes
);
*/
--Rellenamos la tabla 
/*INSERT INTO &quot;Pedidos&quot; (&quot;C.C Ó NIT&quot;, &quot;FECHA&quot;, &quot;MONTO&quot;, &quot;PRODUCTO&quot;)
VALUES
  ('901.239.274-7', '2024-02-15', 250.00, 'Producto A'),
  ('1.090.387.996-1', '2024-03-10', 450.00, 'Producto B'),
  ('901.447.197-1', '2024-06-17', 300.00, 'Producto C'),
  ('901.288.713-8', '2024-08-22', 150.00, 'Producto D'),
  ('901.811.137-9', '2024-11-03', 500.00, 'Producto E');*/
  
--Acceso a Datos en Dos Tablas Utilizando INNER JOIN
/*SELECT 
  c.&quot;CLIENTE&quot;, 
  c.&quot;C.C Ó NIT&quot;, 
  SUM(p.&quot;MONTO&quot;) AS total_pedidos_2024
FROM &quot;Clientes&quot; c
INNER JOIN &quot;Pedidos&quot; p
  ON c.&quot;C.C Ó NIT&quot; = p.&quot;C.C Ó NIT&quot;
WHERE strftime('%Y', p.&quot;FECHA&quot;) = '2024'
GROUP BY c.&quot;C.C Ó NIT&quot;;*/

-- Acceso a Datos en Dos Tablas Utilizando INNER JOIN y Filtrando Utilizando WHERE
/*SELECT 
  c.&quot;CLIENTE&quot;, 
  c.&quot;C.C Ó NIT&quot;, 
  p.&quot;MONTO&quot;, 
  p.&quot;PRODUCTO&quot;
FROM &quot;Clientes&quot; c
INNER JOIN &quot;Pedidos&quot; p
  ON c.&quot;C.C Ó NIT&quot; = p.&quot;C.C Ó NIT&quot;
WHERE p.&quot;MONTO&quot; &gt; 300;*/

--Accediendo a Datos en Dos Tablas Usando INNER JOIN, Filtrando Usando WHERE, y Ordenando con ORDER BY
SELECT 
  c.&quot;CLIENTE&quot;, 
  c.&quot;C.C Ó NIT&quot;, 
  p.&quot;MONTO&quot;, 
  p.&quot;PRODUCTO&quot;
FROM &quot;Clientes&quot; c
INNER JOIN &quot;Pedidos&quot; p
  ON c.&quot;C.C Ó NIT&quot; = p.&quot;C.C Ó NIT&quot;
WHERE p.&quot;MONTO&quot; &gt; 300
ORDER BY p.&quot;MONTO&quot; DESC;

















</sql><current_tab id="0"/></tab_sql></sqlb_project>
